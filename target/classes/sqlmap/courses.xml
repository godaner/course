<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.course.dao.mapper.CoursesMapper">
    <resultMap type="com.course.dao.po.Courses" id="CoursesMap">
        <id column="id" property="id"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="img_url" property="imgUrl"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="download_number" property="downloadNumber"/>
        <result column="learn_number" property="learnNumber"/>
    </resultMap>

    <sql id="BASE_ALL_CLOUM">
        id,
        <include refid="BASE_COLUM_WITHOUT_ID"/>
    </sql>

    <sql id="BASE_COLUM_WITHOUT_ID">
		status,
		create_time,
		update_time,
		img_url,
		name,
		description,
		download_number,
		learn_number
	</sql>


    <select id="count" resultType="int">
        SELECT
        count(1)
        FROM
        courses
        <include refid="queryCondition"/>
    </select>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO courses(
        <include refid="BASE_COLUM_WITHOUT_ID"/>
        )
        VALUES (
        #{status},
        #{createTime},
        #{updateTime},
        #{imgUrl},
        #{name},
        #{description},
        #{downloadNumber},
        #{learnNumber}
        )
    </insert>

    <delete id="delete">
		DELETE
		FROM
			courses
		WHERE
			id = #{id}
	</delete>

    <update id="update" parameterType="com.course.dao.po.Courses">
        UPDATE
        courses
        <set>
            <if test="status != null">status=#{status},</if>
            <if test="createTime != null">create_time=#{createTime},</if>
            <if test="updateTime != null">update_time=#{updateTime},</if>
            <if test="imgUrl != null">img_url=#{imgUrl},</if>
            <if test="name != null">name=#{name},</if>
            <if test="description != null">description=#{description},</if>
            <if test="downloadNumber != null">download_number=#{downloadNumber},</if>
            <if test="learnNumber != null">learn_number=#{learnNumber}</if>
        </set>
        WHERE
        id=#{id}
    </update>


    <select id="selectList" resultMap="CoursesMap">
        SELECT
        <include refid="BASE_ALL_CLOUM"/>
        FROM
        courses
        <include refid="queryCondition"/>
        LIMIT #{start},#{size}

    </select>

    <select id="selectListOrderBy" resultMap="CoursesMap">
        SELECT
        <include refid="BASE_ALL_CLOUM"/>
        FROM
        courses
        <include refid="queryCondition"/>
        <if test="orderBy != null and orderType != null">
            order by ${orderBy} ${orderType}
        </if>
        limit #{start},#{size}

    </select>

    <sql id="queryCondition">
        <trim prefix="where" prefixOverrides="and">
            <if test="query != null">
                <if test="query.status != null ">
                    and status=#{query.status}
                </if>
                <if test="query.createTime != null ">
                    and create_time=#{query.createTime}
                </if>
                <if test="query.updateTime != null ">
                    and update_time=#{query.updateTime}
                </if>
                <if test="query.imgUrl != null ">
                    and img_url=#{query.imgUrl}
                </if>
                <if test="query.name != null ">
                    and name=#{query.name}
                </if>
                <if test="query.description != null ">
                    and description=#{query.description}
                </if>
                <if test="query.downloadNumber != null ">
                    and download_number=#{query.downloadNumber}
                </if>
                <if test="query.learnNumber != null ">
                    and learn_number=#{query.learnNumber}
                </if>
            </if>
        </trim>
    </sql>


    <insert id="batchInsert" useGeneratedKeys="true" parameterType="java.util.List" keyProperty="id">
        INSERT INTO courses(
        <include refid="BASE_COLUM_WITHOUT_ID"/>
        ) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.status},
            #{item.createTime},
            #{item.updateTime},
            #{item.imgUrl},
            #{item.name},
            #{item.description},
            #{item.downloadNumber},
            #{item.learnNumber}
            )
        </foreach>
    </insert>


    <select id="select" resultMap="CoursesMap">
        SELECT * FROM courses WHERE id = #{id}
    </select>


    <select id="selectInIds" resultMap="CoursesMap">
        SELECT
        <include refid="BASE_ALL_CLOUM"/>
        FROM
        courses
        WHERE id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <select id="selectIdList" resultType="java.lang.Long">
        SELECT
        id
        FROM
        courses
        <include refid="queryCondition"/>

    </select>


    <select id="selectBy" resultMap="CoursesMap">
        SELECT *
        FROM
        courses
        <include refid="queryCondition"/>
    </select>


    <select id="selectOneBy" resultMap="CoursesMap">
        SELECT *
        FROM
        courses
        <include refid="queryCondition"/>
        LIMIT 1
    </select>
    <!--**************************** 自定义mapper start ****************************-->
    <select id="getCoursesList" resultMap="CoursesMap">
        SELECT DISTINCT c.*
        FROM
        courses c left join course_tag_realations r
        on r.course_id = c.id
        where c.status = #{query.status}
        and (r.`status` is NULL or r.`status`=#{query.status})
        <if test="query.keyword!=null">
            and c.`name` LIKE concat('%',#{query.keyword},'%')
        </if>
        <if test="query.tagIds!=null">
            and r.tag_id IN
            <foreach item="item" index="index" collection="query.tagIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="page.orderBy != null and page.orderType != null">
            order by ${page.orderBy} ${page.orderType}
        </if>
        <if test="page.start != null and page.size != null">
            limit #{page.start},#{page.size}
        </if>
    </select>
    <select id="getCoursesCount" resultType="long">
        SELECT count(DISTINCT c.id)
        FROM
        courses c left join course_tag_realations r
        on r.course_id = c.id
        where c.status = #{query.status}
        and (r.`status` is NULL or r.`status`=#{query.status})
        <if test="query.keyword!=null">
            and c.`name` LIKE concat('%',#{query.keyword},'%')
        </if>
        <if test="query.tagIds!=null">
            and r.tag_id IN
            <foreach item="item" index="index" collection="query.tagIds" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
    </select>

    <resultMap id="getCourseWithSourcesMap" type="com.course.dao.po.custom.CoursesWithSources">
        <id column="id" property="id"/>
        <result column="img_url" property="imgUrl"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="download_number" property="downloadNumber"/>
        <result column="learn_number" property="learnNumber"/>
        <collection property="courseSourcesList" ofType="com.course.dao.po.CourseSources">
            <id column="source_id" property="id"/>
            <result column="course_id" property="courseId"/>
            <result column="source_name" property="name"/>
            <result column="url" property="url"/>
            <result column="sort" property="sort"/>
            <result column="source_description" property="description"/>
        </collection>
    </resultMap>

    <select id="getCourseWithSources" resultMap="getCourseWithSourcesMap">
        SELECT
        c.*,
        s.id as source_id,
        s.`NAME` AS source_name,
        s.description AS source_description,
        s.url,
        s.sort
        FROM
        courses c
        LEFT JOIN course_sources s
        ON s.course_id = c.id
        WHERE
        (
        s. STATUS = #{query.status}
        OR s.`status` IS NULL
        )
        and c.status = #{query.status}
        and c.id = #{courseId}
        <if test="page.orderBy != null and page.orderType != null">
            order by ${page.orderBy} ${page.orderType}
        </if>
    </select>


    <!--**************************** 自定义mapper end ****************************-->
</mapper>