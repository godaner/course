<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vm.dao.mapper.UsersMapper">
<resultMap type="com.vm.dao.po.Temple" id="UsersMap">
  <id column="id" property="id"/>
  <result column="username" property="username"/>
  <result column="password" property="password"/>
  <result column="sex" property="sex"/>
  <result column="birthday" property="birthday"/>
  <result column="description" property="description"/>
  <result column="status" property="status"/>
  <result column="create_time" property="createTime"/>
  <result column="update_time" property="updateTime"/>
</resultMap>

    <sql id="BASE_ALL_CLOUM">
        id,
        <include refid="BASE_COLUM_WITHOUT_ID"/>
    </sql>

	<sql id="BASE_COLUM_WITHOUT_ID">
		username,
		password,
		sex,
		birthday,
		description,
		status,
		create_time,
		update_time
	</sql>



	<select id="count" resultType="int">
		SELECT 
			count(1)
		FROM
		vm_users
		<include refid="queryCondition" />
	</select>

<insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO vm_users(
        <include refid="BASE_COLUM_WITHOUT_ID"/>
        )
        VALUES (
#{username},
#{password},
#{sex},
#{birthday},
#{description},
#{status},
#{createTime},
#{updateTime}
       )
				 </insert>

<delete id="delete">
		DELETE
		FROM
			vm_users
		WHERE
			id = #{id}
	</delete>

<update id="update" parameterType="com.vm.dao.po.Temple" >
UPDATE
		vm_users
<set>
<if test="username != null">username=#{username},</if>
<if test="password != null">password=#{password},</if>
<if test="sex != null">sex=#{sex},</if>
<if test="birthday != null">birthday=#{birthday},</if>
<if test="description != null">description=#{description},</if>
<if test="status != null">status=#{status},</if>
<if test="createTime != null">create_time=#{createTime},</if>
<if test="updateTime != null">update_time=#{updateTime}</if>
</set>
WHERE
id=#{id}
</update>


	<select id="selectList" resultMap="UsersMap">
		SELECT
			<include refid="BASE_ALL_CLOUM"/>
		FROM
		vm_users
		<include refid="queryCondition" />
		LIMIT #{start},#{size}

	</select>

	<select id="selectListOrderBy" resultMap="UsersMap">
		SELECT
			<include refid="BASE_ALL_CLOUM"/>
		FROM
		vm_users
		<include refid="queryCondition" />
	<if test="orderBy != null and orderType != null">
			order by ${orderBy} ${orderType}
		</if>
		limit #{start},#{size}

	</select>

<sql id="queryCondition">
<trim prefix="where" prefixOverrides="and">
<if test="query != null">
<if test="query.username != null ">
		and username=#{query.username}
</if>
<if test="query.password != null ">
		and password=#{query.password}
</if>
<if test="query.sex != null ">
		and sex=#{query.sex}
</if>
<if test="query.birthday != null ">
		and birthday=#{query.birthday}
</if>
<if test="query.description != null ">
		and description=#{query.description}
</if>
<if test="query.status != null ">
		and status=#{query.status}
</if>
<if test="query.createTime != null ">
		and create_time=#{query.createTime}
</if>
<if test="query.updateTime != null ">
		and update_time=#{query.updateTime}
</if>
</if>
</trim>
</sql>


<insert id="batchInsert"  useGeneratedKeys="true" parameterType="java.util.List" keyProperty="id">
        INSERT INTO vm_users(
        <include refid="BASE_COLUM_WITHOUT_ID"/>
)        VALUES 
   <foreach collection ="list" item ="item" index ="index" separator =","> 
(
#{item.username},
#{item.password},
#{item.sex},
#{item.birthday},
#{item.description},
#{item.status},
#{item.createTime},
#{item.updateTime}
)
</foreach> 
</insert>


    <select id="select" resultMap="UsersMap">
        SELECT * FROM vm_users WHERE id = #{id}
    </select>


    <select id="selectInIds" resultMap="UsersMap">
        SELECT
        <include refid="BASE_ALL_CLOUM"/>
        FROM
        vm_users
        WHERE id IN
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <select id="selectIdList" resultType="java.lang.Long">
        SELECT
 		 id 
        FROM
        vm_users
        <include refid="queryCondition" />

    </select>


	<select id="selectBy" resultMap="UsersMap">
		SELECT * 
		FROM
		vm_users
		<include refid="queryCondition" />
	</select>


	<select id="selectOneBy" resultMap="UsersMap">
		SELECT * 
		FROM
		vm_users
		<include refid="queryCondition" />
		LIMIT 1 
	</select>

</mapper>